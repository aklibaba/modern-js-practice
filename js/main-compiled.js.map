{"version":3,"sources":["main.js"],"names":[],"mappings":"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","file":"main-compiled.js","sourcesContent":["var modernJs = {\r\n\r\n\r\n    objectKeysMethod: function ()\r\n    {\r\n        var dictionary = {\r\n            'smart': 'good looking',\r\n            'hype': 'buzz',\r\n            'azonto': 'type of dance'\r\n        };\r\n\r\n        var dictionaryKeys = Object.keys(dictionary);\r\n\r\n        var upperKeys = dictionaryKeys.map(function (key, i, arr)\r\n                                           {\r\n                                               return key.toUpperCase();\r\n                                           });\r\n\r\n        return upperKeys.join(' ');\r\n    },\r\n\r\n    classroom: {\r\n        'stud1': 'Alex',\r\n        'stud2': 'Peter',\r\n        'stud3': 'Lynda'\r\n    },\r\n\r\n\r\n    traditionalIteration: function ()\r\n    {\r\n\r\n        var studentsArray = [];\r\n\r\n        for (var student in this.classroom)\r\n        {\r\n            if (this.classroom.hasOwnProperty(student))\r\n            {\r\n                studentsArray.push(this.classroom[student])\r\n            }\r\n        }\r\n\r\n        return studentsArray.join(' ; ');\r\n    },\r\n\r\n    modernIteration: function ()\r\n    {\r\n        var classRoomKeys = Object.keys(this.classroom);\r\n\r\n        var that = this;\r\n        var studentsArray = classRoomKeys.map(function (key)\r\n                                              {\r\n                                                  return that.classroom[key];\r\n                                              });\r\n\r\n\r\n        return studentsArray.join(' ; ');\r\n    },\r\n\r\n    letScoping: function ()\r\n    {\r\n        let someStr = 'Hi';\r\n\r\n        if (someStr === 'Hi')\r\n        {\r\n            let someStr = 'Bye';\r\n        }\r\n\r\n        someStr = 'sth else';\r\n\r\n        return someStr;\r\n\r\n    },\r\n\r\n    arrowFunctions: function ()\r\n    {\r\n\r\n        let companyData = {\r\n            employees: ['Lukasz', 'Piotrek', 'Maciek', 'Dana'],\r\n            domain: 'direktpoint.com',\r\n            generateEmailAddresses: function ()\r\n            {\r\n\r\n                let mapEmailsFunction = function (item)\r\n                {\r\n                    return item.toLowerCase() + '@' + this.domain;\r\n\r\n                }.bind(this);\r\n\r\n                let arrayOfEmails = this.employees.map(mapEmailsFunction);\r\n\r\n                return arrayOfEmails.join('<br>');\r\n            }\r\n        };\r\n\r\n        return companyData.generateEmailAddresses();\r\n\r\n    },\r\n\r\n    defaultParams: (name, surname = 'Moloniewicz') =>\r\n    {\r\n        console.log(`My name is ${name} ${surname}`);\r\n    },\r\n\r\n    es6Objects: {\r\n        cat: {\r\n            miau(times)\r\n            {\r\n                console.log('miau '.repeat(times));\r\n            },\r\n            dap(times)\r\n            {\r\n                console.log(Array(times + 1).join('dap'));\r\n            },\r\n            hophop: function (times)\r\n            {\r\n                console.log(Array(times + 1).join('hophop'));\r\n            }\r\n\r\n\r\n        }\r\n    },\r\n\r\n    destructuringArrays() {\r\n        var [first,,, fourth] = ['Poznan', 'Krakow', 'Warszawa', 'Gdansk', 'Szczecin'];\r\n\r\n        return `${first} ${fourth}`;\r\n    },\r\n\r\n    destructuringObjects(){\r\n        var {name, height} = {\r\n            name: 'crataegus monogyna',\r\n            height: 'max 3m.',\r\n            genus: ' crataefus',\r\n            fruits: 'red, small, oval'\r\n        };\r\n\r\n        return `the ${name} has a height of ${height}`;\r\n    },\r\n\r\n    destructuringObjectsForArgs() {\r\n        var aDance = {\r\n            name: 'makossa',\r\n            origin: 'benin',\r\n            tempo: 'fast',\r\n            mainInstrument: 'drum'\r\n        };\r\n\r\n        function showADance({name, tempo, origin})\r\n        {\r\n            return `${name} is a ${tempo} dance, that comes from ${origin}, and is popular in clubs today`;\r\n        }\r\n\r\n        return showADance(aDance);\r\n\r\n    },\r\n\r\n    generators() {\r\n        function* directions()\r\n        {\r\n            yield 'North';\r\n            yield 'West';\r\n            yield 'South';\r\n            yield 'East';\r\n        }\r\n\r\n        var direction = directions();\r\n\r\n        console.log(direction.next());\r\n        console.log(direction.next());\r\n        console.log(direction.next());\r\n        console.log(direction.next());\r\n        console.log(direction.next());\r\n    },\r\n\r\n    generators2() {\r\n        function* eachItem(arr)\r\n        {\r\n            for (var i = 0; i < arr.length; i++)\r\n            {\r\n                yield arr[i];\r\n            }\r\n        }\r\n\r\n        var wyliczanka = eachItem(['ene', 'duo', 'like', 'fake']);\r\n\r\n        var wyliczam = setInterval(function ()\r\n                                   {\r\n                                       var haslo = wyliczanka.next();\r\n                                       if (haslo.done)\r\n                                       {\r\n                                           clearInterval(wyliczam);\r\n                                           console.log('Skonczylem!');\r\n                                       }\r\n                                       else\r\n                                       {\r\n                                           console.log(haslo.value);\r\n                                       }\r\n                                   }, 600);\r\n    },\r\n\r\n    wyjmuje() {\r\n        var rectangle = {\r\n            x: 5,\r\n            y: 4\r\n        };\r\n\r\n        function cubeArea({x, y, z = 10})\r\n        {\r\n            return x * y * z;\r\n        }\r\n\r\n        return cubeArea(rectangle);\r\n    },\r\n\r\n    reszta() {\r\n        function goShopping(prefix, ...args)\r\n        {\r\n            var list = '<ul>';\r\n\r\n            args.forEach(\r\n                elem =>\r\n                {\r\n                    list += `<li>${prefix}: ${elem.item}</li>`;\r\n                });\r\n\r\n            list += '</ul>';\r\n\r\n            return list;\r\n        }\r\n\r\n        return goShopping('kup', {item: 'bulka'}, {item: 'salata'}, {item: 'soczewica'});\r\n    },\r\n\r\n    spread() {\r\n        var details = ['now', 'run', 'in company'];\r\n\r\n        function activity(when, what, withWho)\r\n        {\r\n            return `${when} I am going to ${what} ${withWho}`;\r\n        }\r\n\r\n        return activity(...details);\r\n    },\r\n\r\n    spreadOld() {\r\n        var details = ['now', 'run', 'in company'];\r\n\r\n        function activity(when, what, withWho)\r\n        {\r\n            return `${when} I am going to ${what} ${withWho}`;\r\n        }\r\n\r\n        // debugger;\r\n        return activity.apply(this, details);\r\n\r\n    },\r\n\r\n    classes() {\r\n        class Tree {\r\n            constructor(name, height, bark, leafColor)\r\n            {\r\n                this.name = name;\r\n                this.height = height;\r\n                this.bark = bark;\r\n                this.leafColor = leafColor;\r\n            }\r\n\r\n            grow()\r\n            {\r\n                this.height += 1;\r\n            }\r\n\r\n            florish()\r\n            {\r\n                if (this.leafColor === 'green')\r\n                    this.leafColor = 'greener:';\r\n                else\r\n                    this.leafColor = 'green';\r\n            }\r\n\r\n        }\r\n\r\n        class Country {\r\n\r\n            constructor(name, continent)\r\n            {\r\n                this.name = name;\r\n                this.continent = continent;\r\n            }\r\n\r\n            describeYourself(options)\r\n            {\r\n                switch (options.speed)\r\n                {\r\n                    case 'fast':\r\n                        return `I am ${this.name} from ${this.continent}`;\r\n                    // break;\r\n\r\n                    case 'slow':\r\n                        return `I am ${this.name}, a very nice place to go in ${this.continent}`;\r\n                    // break;\r\n\r\n                    default:\r\n                        return `I am ${this.name}`;\r\n                    // break;\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n        // debugger;\r\n\r\n        let maple = new Tree('acer', '5', 'smoothly ribbed');\r\n\r\n        let vietnam = new Country('Vietnam', 'Asia');\r\n\r\n        console.log(Object.keys(maple));\r\n        console.log(vietnam.describeYourself({\r\n\r\n                                             }));\r\n\r\n\r\n    },\r\n\r\n    enhancedKeys() {\r\n        var category = 'players';\r\n\r\n        var obj = {\r\n            'name': 'Zito',\r\n            [`\r\n                        ${category}\r\n                        _id`]: 23\r\n        };\r\n\r\n\r\n        return Object.keys(obj).join('<br>');\r\n    }\r\n\r\n\r\n};\r\n\r\nmodernJs.generators2();\r\n\r\nmodernJs.generators();\r\nmodernJs.es6Objects.cat.miau(5);\r\n\r\n$('#testdiv').html(modernJs.classes());\r\n\r\n"]}